"""Write your article here."""
type Article {
  _id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
  featuredImage: UploadFile
  content: String!
  category: Category
  author: UsersPermissionsUser
  slug: String!
  excerpt: String
  issue: View
  tags(sort: String, limit: Int, start: Int, where: JSON): [Tags]
}

type Category {
  _id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String
  Category(sort: String, limit: Int, start: Int, where: JSON): [Article]
  editors(sort: String, limit: Int, start: Int, where: JSON): [UsersPermissionsUser]
}

"""
The `DateTime` scalar represents a date and time following the ISO 8601 standard
"""
scalar DateTime

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

union Morph = Article | Category | Tags | View | UploadFile | UsersPermissionsPermission | UsersPermissionsRole | UsersPermissionsUser

type Query {
  article(id: ID!): Article
  articles(sort: String, limit: Int, start: Int, where: JSON): [Article]
  category(id: ID!): Category
  categories(sort: String, limit: Int, start: Int, where: JSON): [Category]
  tag(id: ID!): Tags
  tags(sort: String, limit: Int, start: Int, where: JSON): [Tags]
  view(id: ID!): View
  views(sort: String, limit: Int, start: Int, where: JSON): [View]
  files(sort: String, limit: Int, start: Int, where: JSON): [UploadFile]
  role(id: ID!): UsersPermissionsRole

  """
  Retrieve all the existing roles. You can't apply filters on this query.
  """
  roles(sort: String, limit: Int, start: Int, where: JSON): [UsersPermissionsRole]
  user(id: ID!): UsersPermissionsUser
  users(sort: String, limit: Int, start: Int, where: JSON): [UsersPermissionsUser]
}

"""Tags for articles"""
type Tags {
  _id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  TagName: String
  articles(sort: String, limit: Int, start: Int, where: JSON): [Article]
}

type UploadFile {
  _id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  hash: String!
  ext: String
  mime: String!
  size: String!
  url: String!
  provider: String!
  related(sort: String, limit: Int, start: Int, where: JSON): [Morph]
}

type UsersPermissionsPermission {
  _id: ID!
  type: String!
  controller: String!
  action: String!
  enabled: Boolean!
  policy: String
  role: UsersPermissionsRole
}

type UsersPermissionsRole {
  _id: ID!
  name: String!
  description: String
  type: String
  users(sort: String, limit: Int, start: Int, where: JSON): [UsersPermissionsUser]
  permissions(sort: String, limit: Int, start: Int, where: JSON): [UsersPermissionsPermission]
}

type UsersPermissionsUser {
  _id: ID!
  username: String!
  email: String!
  provider: String
  role: UsersPermissionsRole
  reporterTitle: String
  reporterPhoto: UploadFile
  reporterBio: String
  category_editor: Category
  articles(sort: String, limit: Int, start: Int, where: JSON): [Article]
}

type View {
  _id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  top_article: Article
  name: String
  news_right_first: Article
  news_right_second: Article
  news_right_third: Article
  news_left_big: Article
  opinion_first: Article
  opinion_second: Article
  opinion_third: Article
  arts_living_first_third: Article
  arts_living_second_third: Article
  arts_living_third_third: Article
  arts_living_big: Article
  sports_first: Article
  sports_second: Article
  articles(sort: String, limit: Int, start: Int, where: JSON): [Article]
}
